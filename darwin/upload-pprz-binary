#! /bin/bash

# Paparazzi OS X Binary Installer Upload Script (Upload to esden's server)

# You need to have your public ssh key on esden's server to run this script,
# otherwise manual upload is required! Contact scdwyer@ualberta.ca for
# more information.

cd ~

# Test for which OS we are on - valid only on OS X
platform='unknown'
unamestr=`uname`
if [[ "$unamestr" != 'Darwin' ]]; then
   echo "upload-pprz-binary: Platform $unamestr is NOT SUPPORTED - OS X Only!"
   exit 1
fi

# Test for which version of OS X - some minor changes depending on version
OSX_VERSION_NUM=`sw_vers | sed -n 's/ProductVersion:[[:space:]]10.\([0-9]*\).[0-9]*/\1/p'`

case "$OSX_VERSION_NUM" in
	'6'	) OSXVERSION="SnowLeopard";;
	'7' ) OSXVERSION="Lion";;
	'8'	) OSXVERSION="MountainLion";;
	'9'	) OSXVERSION="Mavericks";;
	*	) OSXVERSION="NotSupported";;
esac

if [[ $OSXVERSION == 'NotSupported' ]]; then
	echo "build-pprz-binary: OS X Version is NOT SUPPORTED - Version 10.$OSX_VERSION_NUM"
	exit 1
fi

HOMEDIR=`pwd`
echo "Current home directory: $HOMEDIR"

if [ -f .ssh/id_rsa.pub ]
then
    #echo "File ~/.ssh/id_rsa.pub exists"
    echo "SSH config should still be valid."
else
    #generate ssh keys
    #echo "Generating SSH keys..."
    echo "Lost SSH keys!!!!!! Exiting."
    exit 1
#    mkdir ~/.ssh
#    ssh-keygen -q -N "" -f ~/.ssh/id_rsa
fi

HOST="scdwyer@repl.esden.net"
ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $HOST "echo 2>&1"
rc=$?
if [[ $rc != 0 ]] ; then
    echo "SSH Connection Failure. Check configuration. Exiting."
    exit $rc
fi

BUILDDATELIST=`find $HOMEDIR -iname "pprzbininstaller_build_date_list.txt"`
LASTBUILDDATE=`tail -1 $BUILDDATELIST`
DMGFILENAME="paparazzi-tools-$OSXVERSION"
DMGFILENAME+="_"
DMGFILENAME+="$LASTBUILDDATE.dmg"
UPLOADFILE=`find $HOMEDIR -iname "$DMGFILENAME"`
HOSTDIR="download-paparazziuav/darwin"

echo "Uploading file $UPLOADFILE..."
scp -B -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $UPLOADFILE $HOST:$HOSTDIR
echo "Upload completed."

echo "Generating and uploading md5 checksum..."
md5 $UPLOADFILE > $UPLOADFILE.md5
scp -B -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $UPLOADFILE.md5 $HOST:$HOSTDIR
echo "Finished md5 upload."
